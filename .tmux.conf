unbind C-b
set -g prefix C-s
bind-key -r C-s send-prefix
set -g history-limit 50000
set-option -sg escape-time 10

bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"
bind-key C-j choose-tree
bind-key -n C-space send-keys C-l
bind-key -n M-k send-keys C-k

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
#bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Bind C-j previous-window
# bind C-k next-window

set-option -g default-terminal "screen-256color"
set-option -g status-keys "emacs"
set-option -g status-left-length 50
set-option -g status-right ""
set-option -g status-style bg='#666666'
set-option -g status-fg '#aaaaaa'
set-option -g status-fg '#aaaaaa'

bind-key - split-window -v  -c '#{pane_current_path}'
bind-key \\ split-window -h  -c '#{pane_current_path}'

#bind -n S-Left resize-pane -L 2
#bind -n S-Right resize-pane -R 2
#bind -n S-Down resize-pane -D 1
#bind -n S-Up resize-pane -U 1

# bind C-Left resize-pane -L 10
# bind C-Right resize-pane -R 10
bind u resize-pane -D 5
unbind U
bind U resize-pane -U 5

bind c new-window -c '#{pane_current_path}'

set-option -g base-index 1
set-option -g pane-base-index 1
set-option -g renumber-windows on

bind-key b break-pane -d

# Use vim keybindings in copy mode
setw -g mode-keys vi
set-option -g default-command "reattach-to-user-namespace -l zsh"

# Setup 'v' to begin selection as in Vim
bind-key -Tcopy-mode-vi 'v' send -X begin-selection
bind-key -Tcopy-mode-vi 'y' send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
# bind-key -t vi-copy v begin-selection
# bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -Tcopy-mode-vi Enter
bind-key -Tcopy-mode-vi Enter send -X copy-pipe "reattach-to-user-namespace pbcopy"
# unbind -t vi-copy Enter
# bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# open vim with CtrlP right away
# bind-key w split-window -h -c ~/remember "vim +CtrlP"
bind w list-windows

# autocomplete commands
bind C-j split-window -v "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"
bind S split-window -v "cat ~/.ssh/known_hosts | grep .com |  sed -e 's/,/ /' | awk '{print $1}' | fzf --reverse | xargs -I {} tmux new-window -n {} 'ssh -tt {}'"

# new ssh session
#bind-key S command-prompt "new-window -n %1 'ssh %1'"
bind C-a new-window ssh use1b-wizzy1.ebates.int -t "export WORKON_HOME=/home/web/.virtualenvs && source /usr/local/bin/virtualenvwrapper.sh && workon web && /home/web/OneReceipt/onereceipt/manage.py shell_plus"

#bind-key C-b send-keys 'tat && exi' 'C-m'

# Kill session without leaving tmux
bind-key K run-shell 'tmux switch-client -n \; kill-session -t "$(tmux display-message -p "#S")" || tmux kill-session'
bind-key x kill-pane
bind-key X kill-window

# make all panes equal size
bind-key + select-layout even-vertical

# Prompted join-pane
bind-key j command-prompt -p "join pane from: "  "join-pane -h -s '%%'"

# Easily swap a pane (targeted by pane number) with the current pane
bind-key s display-panes\; command-prompt -p "pane #: "  "swap-pane -t '%%'"

set -g status-left-length 52
set -g status-right-length 451
set -g status-fg black
set -g status-style bg=white
set -g window-status-activity-style bold
set -g pane-border-style fg=black
set -g pane-active-border-style fg=magenta
set -g message-style fg=white
set -g message-style bg=yellow
set -g message-style bold
set -g status-style default
set -g status-style bg=colour235
set -g status-style fg=colour136

set -g status-right '#[fg=red]«Leader: C-s»#[fg=default]  #(whoami)@#(hostname) %H:%M:%S '
set-option -g status-left "#S [#[default]"
set-option -gw window-status-current-format '#{?pane_synchronized,#[fg=blue]*#[default],}#I:#W#F'
#set-option -g status-right '#[fg=green]] #[fg=white]%a %Y-%m-%d %R#[default]'

bind C-s setw synchronize-panes

# bind C-d send-keys "docker-machine ls -q | fzf --reverse | xargs -I {} 'eval $(docker-machine env {})'"
# bind C-Left resize-pane -L 10
# bind C-Right resize-pane -R 10
bind u resize-pane -D 5
unbind U
bind U resize-pane -U 5

# Create a pane with numbers on the left side
# bind N split-window -h -l 3 -b "printf '\e[38;5;0m\e[48;5;226m' && seq 200 1 && echo -n 0 && read" \; select-pane -l
# bind M select-pane -l \; kill-pane

# Load tmux remote servers configuration
# if-shell 'test -n "$SSH_CLIENT"' 'source-file ~/.tmux.remote.conf'
